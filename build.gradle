buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
        maven { url "http://repo.spring.io/plugins-release" }
        maven {
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath "io.spring.gradle:propdeps-plugin:0.0.10.RELEASE"
        classpath "org.liquibase:liquibase-gradle-plugin:2.0.1"
    }
}
plugins {
    id 'org.asciidoctor.convert' version '1.5.3'
    id 'org.springframework.boot' version '2.1.9.RELEASE'
    id 'java'
    id "maven"
    id "idea"
    id "net.ltgt.apt-eclipse" version "0.21"
    id "net.ltgt.apt-idea" version "0.21"
    id "org.liquibase.gradle" version "2.0.1"
    id "com.google.cloud.tools.jib" version "1.5.1"
    id "nebula.dependency-lock" version "8.2.0"
}
apply from: "gradle/docker.gradle"
apply plugin: 'io.spring.dependency-management'
apply plugin: "propdeps"
apply plugin: 'org.liquibase.gradle'
apply plugin: 'java'

group = 'com.ampmangu'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8
assert System.properties["java.specification.version"] == "1.8"

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}
bootRun {
    systemProperty 'MOVIE_DB_API_KEY', MOVIE_DB_KEY
    systemProperty 'JWT_MASTER_TOKEN', JWT_MASTER_TOKEN
}

springBoot {
    mainClassName = "com.ampmangu.degrees.Application"
}

//test {
//    useJUnitPlatform()
//    exclude "**/*IT*", "**/*IntTest*", "**/*CucumberIT*"
//    testLogging {
//        events 'FAILED', 'SKIPPED'
//    }
//    reports.html.enabled = false
//}

//task integrationTest(type: Test) {
//    useJUnitPlatform()
//    description = "Execute integration tests."
//    group = "verification"
//    include "**/*IT*", "**/*IntTest*"
//    exclude "**/*CucumberIT*"
//
//    testLogging {
//        events 'FAILED', 'SKIPPED'
//    }
//    // uncomment if the tests reports are not generated
//    // see https://github.com/jhipster/generator-jhipster/pull/2771 and https://github.com/jhipster/generator-jhipster/pull/4484
//    // ignoreFailures true
//    reports.html.enabled = false
//}

//task cucumberTest(type: Test) {
//    description = "Execute cucumber BDD tests."
//    group = "verification"
//    include "**/*CucumberIT*"
//
//    // uncomment if the tests reports are not generated
//    // see https://github.com/jhipster/generator-jhipster/pull/2771 and https://github.com/jhipster/generator-jhipster/pull/4484
//    // ignoreFailures true
//    reports.html.enabled = false
//}
//
//check.dependsOn cucumberTest
//
////check.dependsOn integrationTest
//task testReport(type: TestReport) {
//    destinationDir = file("$buildDir/reports/tests")
//    reportOn test
//}
//
//task integrationTestReport(type: TestReport) {
//    destinationDir = file("$buildDir/reports/tests")
//    reportOn integrationTest
//}
//
//task cucumberTestReport(type: TestReport) {
//    destinationDir = file("$buildDir/reports/tests")
//    reportOn cucumberTest
//}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}
eclipse {
    sourceSets {
        main {
            java {
                srcDirs += ["build/generated/source/apt/main"]
            }
        }
    }
}
if (!project.hasProperty('runList')) {
    project.ext.runList = 'main'
}

project.ext.diffChangelogFile = "src/main/resources/config/liquibase/changelog/" + new Date().format("yyyyMMddHHmmss") + "_changelog.xml"
liquibase {
    activities {
        main {
            driver 'org.mariadb.jdbc.Driver'
            url 'jdbc:mariadb://localhost:3306/7degrees'
            username 'root'
            password ''
            changeLogFile 'src/main/resources/config/liquibase/master.xml'
            referenceUrl 'hibernate:spring:com.ampmangu.degrees.domain?dialect=org.hibernate.dialect.H2Dialect&amp;hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy&amp;hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy'
            defaultSchemaName ''
            logLevel 'debug'
            classpath "$buildDir/classes/java/main"
        }
    }

    runList = project.ext.runList
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web:2.1.9.RELEASE'
    compileOnly 'org.projectlombok:lombok:1.18.10'
    developmentOnly 'org.springframework.boot:spring-boot-devtools:2.1.9.RELEASE'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:2.1.9.RELEASE'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.1.9.RELEASE'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:2.0.4.RELEASE'
    implementation "org.springframework.boot:spring-boot-starter-actuator:2.1.9.RELEASE"
    compile group: 'org.springframework', name: 'spring-beans', version: '5.1.7.RELEASE'
    compile group: 'org.springframework', name: 'spring-orm', version: '5.1.7.RELEASE'
    compile group: 'org.springframework', name: 'spring-jdbc', version: '5.1.7.RELEASE'
    compile group: 'org.springframework', name: 'spring-context', version: '5.1.7.RELEASE'
    compile group: 'org.springframework', name: 'spring-core', version: '5.1.7.RELEASE'

    // UTILS
    implementation "org.apache.commons:commons-lang3:3.8.1"
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile 'commons-lang:commons-lang:2.3'
    compile "javax.cache:cache-api:1.1.1"
    implementation "javax.transaction:javax.transaction-api:1.3"
    implementation 'org.zalando:problem-spring-web:0.24.0'
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-hppc:2.9.9"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.9"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-hibernate5:2.9.9"
    implementation "com.fasterxml.jackson.core:jackson-annotations:2.9.0"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.9.9.3"
    implementation "com.fasterxml.jackson.module:jackson-module-afterburner:2.9.9"

    //
    // DATABASE
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:2.1.7.RELEASE"
    implementation "org.mariadb.jdbc:mariadb-java-client:2.3.0"
    implementation "com.zaxxer:HikariCP:3.2.0"
    testImplementation "com.h2database:h2:1.4.199"
    //
    // HIBERNATE
    annotationProcessor "org.hibernate:hibernate-jpamodelgen:5.3.12.Final"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-hibernate5:2.9.9"
    compile "org.hibernate:hibernate-core:5.3.12.Final"
    compile "org.hibernate:hibernate-jcache:5.3.12.Final"
    compile "org.hibernate:hibernate-entitymanager:5.3.12.Final"
    compile "org.hibernate:hibernate-envers:5.3.12.Final"
    compile "org.hibernate.validator:hibernate-validator:6.0.17.Final"
    compile group: 'org.hibernate', name: 'hibernate-ehcache', version: '5.3.12.Final'
    //
    // LIQUIBASE
    implementation "org.liquibase:liquibase-core:3.6.3"
    liquibaseRuntime "org.liquibase:liquibase-core:3.6.3"
    liquibaseRuntime "org.liquibase.ext:liquibase-hibernate5:3.6"
    liquibaseRuntime sourceSets.main.compileClasspath
    liquibaseRuntime "org.mariadb.jdbc:mariadb-java-client:2.3.0"
    liquibaseRuntime('org.liquibase:liquibase-groovy-dsl:2.0.1')
    //
    // REST
    implementation 'com.squareup.retrofit2:retrofit:2.6.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.1'
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.6.1"
    implementation("com.squareup.okhttp3:okhttp:4.1.0")
    implementation "com.squareup.okhttp3:logging-interceptor:4.1.0"

    //
    liquibaseRuntime sourceSets.main.output // replaces liquibaseRuntime files('src/main')
    // TEST
//    testImplementation "io.cucumber:cucumber-junit"
//    testImplementation "io.cucumber:cucumber-spring"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:5.3.2"
    testImplementation "org.junit.vintage:junit-vintage-engine:5.3.2"
    testImplementation "org.assertj:assertj-core:3.11.1"
    testImplementation "junit:junit:4.12"
    testImplementation "org.mockito:mockito-core:2.23.4"
    testImplementation "org.hamcrest:hamcrest-library:1.3"
    //
    // GRADLE
    compile 'redis.clients:jedis:3.1.0'
    //
}
test {
    outputs.dir snippetsDir
}
jar {
    duplicatesStrategy = 'exclude'
}
asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}
